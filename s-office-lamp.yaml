
substitutions:
  name: s-office-lamp # hostname & entity_id
  friendly_name: Office # Displayed in HA frontend

packages:
  common: !include modules/common-8266.yaml
#  switch: !include modules/devices/treatlife-switch-ss01.yaml

binary_sensor:
- platform: gpio
  pin:
    inverted: true
    number: 13
  name: Office Button
  internal: true
  filters:
  - delayed_on_off: 50ms
  on_press:
    switch.toggle: logicswitch

globals:
  - id: smartbulbs_latch
    type: bool
    restore_value: no
    initial_value: "false"

switch:
  - name: "${friendly_name} Smart Bulbs"
    platform: template
    id: sw_relay_mode
    device_class: "switch"
    entity_category: "config"
    lambda: |-
      if (id(smartbulbs_latch)) {
        return true;
      } else {
        return false;
      }      
    turn_on_action: # If smartbulbs are installed, they need power all the time.
      - globals.set:
          id: smartbulbs_latch
          value: "true"
      - switch.turn_on: 'switch1'
    turn_off_action:
      - globals.set:
          id: smartbulbs_latch
          value: "false"
      - switch.turn_off: 'switch1'
  - platform: template
    id: logicswitch # This logical switch controls the logical status of the switch
    name: ${friendly_name} Status
    optimistic: true
    restore_state: yes
    on_turn_on:
      then: # indicator still displays status of switch logic
        - light.turn_on: 
            id: indicator
            effect: "None" # yes, programmed effects will work!
            brightness: 100%
        - if:
            condition: # If connected and has smartbulb installed:
              - api.connected:
              - lambda: 'return id(smartbulbs_latch);'
            then: # then use events to control bulbs, not power.
              - homeassistant.event:
                  event: esphome.switch
                  data:
                    device: ${name}
                    action: 'on'
            else: # If HA can't be reached, then
              - switch.turn_on: 'switch1'
    on_turn_off:
      then:
        - light.turn_off: indicator # "off" is actually low level; see output: pwm (min_power)
        - if:
            condition:
            - api.connected:
            - lambda: 'return id(smartbulbs_latch);'
            then:
              - homeassistant.event:
                  event: esphome.switch
                  data:
                    device: ${name}
                    action: 'on'
            else: # If HA can't be reached, then
            - switch.turn_off: 'switch1'
  - platform: output
    id: switch1
    output: relay
    name: ${friendly_name} Output
    restore_mode: RESTORE_DEFAULT_OFF
    internal: true

light:
  - platform: status_led
    id: errorled
    pin:
      number: GPIO05
      inverted: True
  - platform: monochromatic
    name: "${friendly_name} Indicator"
    id: indicator
    output: pwm
    default_transition_length: 500ms
    internal: true
    effects:
      - pulse:
          transition_length: 0.5s
          update_interval: 0.5s

output:
  - platform: esp8266_pwm
    pin: GPIO04
    id: pwm
    frequency: 300 Hz
    min_power: 10%
    inverted: true
  - platform: gpio
    pin: GPIO12
    id: relay
    inverted: false
